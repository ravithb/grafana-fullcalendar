{"version":3,"sources":["../src/calendar.js"],"names":["Calendar","ctrl","container","rangeContainer","self","tuiCalendar","TuiCalendar","defaultView","taskView","template","milestone","model","bgColor","title","allday","schedule","getTimeTemplate","time","schedules","console","log","createSchedules","view","changeView","setRangeText","today","next","prev","options","getOptions","viewName","getViewName","html","push","moment","getDate","getTime","format","month","visibleWeeksCount","getDateRangeStart","getDateRangeEnd","innerHTML","join","isAllDay","start","toUTCString","isPrivate","isReadOnly","recurrenceRule","attendees","length","location"],"mappings":"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","sourcesContent":["import * as TuiCalendar from './libs/tui-calendar';\nimport * as moment from './libs/moment';\n\nexport default class Calendar {\n  ctrl;\n  container;\n  rangeContainer;\n  tuiCalendar;\n\n  constructor(ctrl, container, rangeContainer) {\n    this.ctrl = ctrl;\n    this.container = container;\n    this.rangeContainer = rangeContainer;\n    let self = this;\n    this.tuiCalendar =  new TuiCalendar(this.container, {\n      defaultView: 'month',\n      taskView: false,\n      template: {\n        // monthGridHeader: function(model) {\n        //   var date = new Date(model.date);\n        //   var template = '<span class=\"tui-full-calendar-weekday-grid-date\">' + date.getDate() + '</span>';\n        //   return template;\n        // },\n\n        milestone: function(model) {\n          return '<span class=\"calendar-font-icon ic-milestone-b\"></span> <span style=\"background-color: ' + model.bgColor + '\">' + model.title + '</span>';\n        },\n        allday: function(schedule) {\n          return self.getTimeTemplate(schedule, true);\n        },\n        time: function(schedule) {\n          return self.getTimeTemplate(schedule, false);\n        }\n\n      }\n    });\n  }\n\n  createSchedules(schedules){\n    console.log('createSchedules called');\n    this.tuiCalendar.createSchedules(schedules);\n  }\n\n  changeView(view){\n    console.log('changeView called with %o',view);\n    this.tuiCalendar.changeView(view,true);\n    this.setRangeText();\n  }\n\n  today(){\n    this.tuiCalendar.today();\n    this.setRangeText();\n  }\n\n  next(){\n    this.tuiCalendar.next();\n    this.setRangeText();\n  }\n\n  previous(){\n    this.tuiCalendar.prev();\n    this.setRangeText();\n  }\n\n  setRangeText(){\n    if(!this.rangeContainer){\n      return;\n    }\n    var options = this.tuiCalendar.getOptions();\n    var viewName = this.tuiCalendar.getViewName();\n    var html = [];\n    if (viewName === 'day') {\n      html.push(moment(this.tuiCalendar.getDate().getTime()).format('Do MMM, YYYY'));\n    } else if (viewName === 'month' &&\n        (!options.month.visibleWeeksCount || options.month.visibleWeeksCount > 4)) {\n      html.push(moment(this.tuiCalendar.getDate().getTime()).format('MMMM, YYYY'));\n    } else {\n      html.push(moment(this.tuiCalendar.getDateRangeStart().getTime()).format('Do MMM'));\n      html.push(' ~ ');\n      html.push(moment(this.tuiCalendar.getDateRangeEnd().getTime()).format(' Do MMM, YYYY'));\n    }\n    this.rangeContainer.innerHTML = html.join('');  \n  }\n\n  getTimeTemplate(schedule, isAllDay) {\n    var html = [];\n    var start = moment(schedule.start.toUTCString());\n    if (!isAllDay) {\n      html.push('<strong>' + start.format('HH:mm') + '</strong> ');\n    }\n    if (schedule.isPrivate) {\n      html.push('<span class=\"calendar-font-icon ic-lock-b\"></span>');\n      html.push(' Private');\n    } else {\n      if (schedule.isReadOnly) {\n        html.push('<span class=\"calendar-font-icon ic-readonly-b\"></span>');\n      } else if (schedule.recurrenceRule) {\n        html.push('<span class=\"calendar-font-icon ic-repeat-b\"></span>');\n      } else if (schedule.attendees.length) {\n        html.push('<span class=\"calendar-font-icon ic-user-b\"></span>');\n      } else if (schedule.location) {\n        html.push('<span class=\"calendar-font-icon ic-location-b\"></span>');\n      }\n      html.push(' ' + schedule.title);\n    }\n\n    return html.join('');\n  }\n}"],"file":"calendar.js"}